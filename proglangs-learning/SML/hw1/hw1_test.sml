
(* testing functions *)

is_older ((2011,2,2), (2011,3,3)); (* true *)
is_older ((2010,12,6), (2010,12,6)); (* false *)
is_older ((2013,5,14), (2012,7,23)); (* false *)
is_older ((2012,7,23), (2013,5,14)); (* true *)

number_in_month([(2013,5,14), (2012,7,23), (2010,5,1)], 5); (* 2 *)
number_in_month([], 12); (* 0 *)

number_in_months([(2013,5,14), (2012,7,23), (2010,5,1)], [5,3]); (* 2 *)
number_in_months([(2013,5,14), (2012,7,23), (2010,5,1)], [5,7]); (* 3 *)

dates_in_month([(2013,5,14), (2012,7,23), (2010,5,1)], 5);
    (* [(2013,5,14), (2010,5,1)] *)
dates_in_month([], 12); (* [] *)

dates_in_months([(2013,5,14), (2012,7,23), (2010,5,1)], [5,3]);
    (* [(2013,5,14), (2010,5,1)] *)
dates_in_months([(2013,5,14), (2012,7,23), (2010,5,1)], [5,7]);
    (* [(2013,5,14), (2010,5,1), (2012,7,23)] *)

get_nth(["dog","cat","bananas"], 2); (* "cat" *)

date_to_string(2013, 1, 20); (* "January 20, 2013" *)

number_before_reaching_sum(45, [2,3,5,2,6,6,21,6,52,2,5]); (* [2,3,5,2,6,6] *)

what_month(161); (* 6 *)
what_month(15); (* 1 *)

month_range (1,365) = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12];
(* true *)

month_range(12, 161); (* [1,1,1,1,1,1,1,1,1,...] *)
month_range(326, 329); (* [11,11,11,11] *)
length(month_range(1, 31));

oldest([(2012,7,23), (2013,5,14), (2011,12,3), (2003,06,28)]); (* (2013,5,14) *)
oldest([]); (* NONE *)


(* challenge problems *)

number_in_months_challenge([(2013,5,14), (2012,7,23), (2010,5,1)], [5,7,5]); (* 3 *)

dates_in_months_challenge([(2013,5,14), (2012,7,23), (2010,5,1)], [5,7,5]);
    (* [(2012,7,23),(2013,5,14),(2010,5,1)] *)

reasonable_date (2013,1,12); (* true *)
reasonable_date (2000,2,29); (* true *)
reasonable_date (1900,2,29); (* false *)
